
New patches:

[unrevert
anon**20140628032552
 Ignore-this: 1daa45c950ee81a396a2ff74577a9130
] {
hunk ./src/MD3.hs 58
 import System.IO hiding (withBinaryFile)
 import Control.Exception ( bracket )
 import Textures
-import Data.HashTable
+import Data.HashTable.Class
 import Data.Maybe
 import Data.List
 import Data.Array
hunk ./src/MD3.hs 578
                 let unqtex = nub (map snd texF)
                 textures <- mapM getAndCreateTexture (map (dir++) unqtex)
                 let nmobj = concat $ map (assoc texF) (zip unqtex textures)
-                fromList hashString nmobj
+                fromList nmobj
 
 assoc ::
    [(String,String)] -> (String,Maybe TextureObject) ->
hunk ./src/MD3.hs 743
    texObj    <- mapM getAndCreateTexture (map ("tga/models/weapons/"++) weaponTex)
    readBones handle header
    readTags handle header
-   hash1           <- (fromList hashString [])
+   hash1           <- (fromList [])
    objs    <- readMeshes handle header hash1
    let objs2      = map attachTex (zip texObj objs)
    let emptyList = listArray (0,0) []
hunk ./src/MD3.hs 862
          arrayPointer TextureCoordArray $=
             VertexArrayDescriptor 2 Float 0 nullPtr-}
 
-    tex <- (Data.HashTable.lookup hashTable (strName header))
+    tex <- (Data.HashTable.Class.lookup hashTable (strName header))
     return MeshObject {
             numOfVerts    = (length (head keyframes))*3,
             numOfFaces    = 3*(fromIntegral (numTriangles header)),
}

Context:

[bump to base 4
Don Stewart <dons@galois.com>**20081011185656] 
[Port to GHC 6.10
Don Stewart <dons@galois.com>**20081011185622] 
[Build just the binary (not the library)
Don Stewart <dons@galois.com>**20080622224249] 
[modern setup.hs
Don Stewart <dons@galois.com>**20080622223500] 
[dehaskell98
gwern0@gmail.com**20080224215754] 
[Initial import of frag 1.1
Don Stewart <dons@galois.com>**20080129194811] 
Patch bundle hash:
ac26d5bed1ddffac1dc06cc21080dde34cf241ad
